- data = data.to_a.map(&:last) if data.first.respond_to? :last
- data = data.reject(&:nil?).map(&:to_f).reject(&:nan?)
- width  ||= 150
- height ||= 50
- mode   ||= :lines

%div{class: "sparkline sparkline-#{mode}"}
  - if data.any?
    %svg{viewbox: "0 0 #{width} #{height}", width: width, height: height}
      - if mode == :bars
        - padding = 0.02
        - data.each_with_index do |n, i|
          - if data.uniq.size == 1
            - rect_height = height*0.7
          - else
            - rect_height = ((n-(data.min))/(data.max-(data.min))*height)
            - rect_height = 2 if rect_height < 2 and n > 0
          %rect{x: (data.size-(i))/data.size.to_f*width*-1+width+i*(width*padding), y: height - rect_height, width: (width.to_f/data.size) - (width*padding*3), height: rect_height, data: {value: n}}
      - else
        - offset = (data.max - data.min) < 0.5 ? height/2.0*0.9 : 0
        %polyline{points: data.each_with_index.map { |n, i| "#{((i).to_f/([data.size-1, 1].max)*width)*0.95+0.025*width},#{((n-data.min)/([data.max-data.min, 1].max)*height*-1+height-offset)*0.9+0.05*height}"}.join(' '), data: {value: data}}


  /%embed.sparkline.lines{src: "//sparksvg.me/line.svg?#{data.join(',')}", type: 'image/svg+xml'}
  = #line_chart data, min: nil, max: nil, width: '100px', height: '50px', library: {titlePosition: 'none', chartArea: {top: '10', width: '100%', height: '60%'}, hAxis: {title: '', baselineColor: 'transparent'}, vAxis: {title: '', gridlines: {color: 'transparent'}, baselineColor: 'transparent'}, curveType: 'none', pointSize: 0, enableInteractivity: false}